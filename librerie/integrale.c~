#include "integrale.h"

double trapezio (double a, double b, int n, double(*f)(double)) {
int i;
double sum = 0,h;
h = (b-a)/n;
	for (i=1; i<n; i++) {
	sum = sum + f(a+h*i);
	}
	
sum=h*sum+(f(a)+f(b))*h/2;

return sum;
}

double simpson (double a, double b, int n, double(*f)(double)) {
int i;
double sum_p=-f(a),sum_d=0,sum=0,h;
h = (b-a)/n;
	for(i=0; i<n; i=i+2) {
	sum_d += f(a+(i+1)*h);
	sum_p += f(a+i*h);
	}


		
sum=(f(a) + f(b) + 4*sum_d + 2*sum_p)*h/3;
return sum;
}


double trapezio_par (double a, double b, int n, double par, double(*f)(double,double)) {
int i;
double sum = 0,h;
h = (b-a)/n;
	for (i=1; i<n; i++) {
	sum = sum + f(a+h*i);
	}
	
sum=h*sum+(f(a)+f(b))*h/2;

return sum;
}

double simpson_par (double a, double b, int n, double par, double(*f)(double,double)) {
int i;
double sum_p=-f(a),sum_d=0,sum=0,h;
h = (b-a)/n;
	for(i=0; i<n; i=i+2) {
	sum_d += f(a+(i+1)*h);
	sum_p += f(a+i*h);
	}


		
sum=(f(a) + f(b) + 4*sum_d + 2*sum_p)*h/3;
return sum;
}
